// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type InputNote struct {
	// The offset of the note's start from the beginning of the performance, in milliseconds.
	At int `json:"at"`
	// The duration of the note, in milliseconds.
	Duration int `json:"duration"`
	// Human-readable representation of the note (e.g. 'C#', 'D', 'Fb', etc.)
	Value string `json:"value"`
	// Octave of the note
	Octave int `json:"octave"`
}

type Performance struct {
	ID string `json:"id"`
	// The song that is being/was performed
	Song *Song `json:"song"`
	// The creator of this performance, null when user was not logged in
	Author    *User   `json:"author,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	// The total duration of the performance, in milliseconds.
	Duration int `json:"duration"`
	// An array of *all* notes in the performance, sorted by their start time.
	Notes []*PerformanceNote `json:"notes"`
}

type PerformanceNote struct {
	// The offset of the note's start from the beginning of the performance, in milliseconds.
	At int `json:"at"`
	// The duration of the note, in milliseconds.
	Duration int `json:"duration"`
	// Human-readable representation of the note (e.g. 'C#', 'D', 'Fb', etc.)
	Value string `json:"value"`
	// Octave of the note
	Octave int `json:"octave"`
}

type Song struct {
	ID    string      `json:"id"`
	Title string      `json:"title"`
	Notes []*SongNote `json:"notes"`
}

// This is a separate type from PerformanceNote for now
type SongNote struct {
	Measure  int     `json:"measure"`
	Note     string  `json:"note"`
	Fret     int     `json:"fret"`
	String   int     `json:"string"`
	Octave   int     `json:"octave"`
	Duration int     `json:"duration"`
	Alter    int     `json:"alter"`
	Start    int     `json:"start"`
	End      int     `json:"end"`
	Default  float64 `json:"default"`
	Beat     int     `json:"beat"`
	Type     string  `json:"type"`
}

type User struct {
	ID    string  `json:"id"`
	Name  *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
}

type VirtuozPlay struct {
	Version string `json:"version"`
}
